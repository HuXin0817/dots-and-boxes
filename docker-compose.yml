version: "3.8"
services:
  x-serve-template: &serve-template
    build:
      context: .
      dockerfile: docker/serve.Dockerfile
    depends_on:
      - redis
      - mongodb
      - etcd
    restart: always
    command: /app/bin/serve -f /app/serve/etc/production.yaml -h 0.0.0.0:8000
    networks:
      - default

  serve8000:
    <<: *serve-template
    ports:
      - "8000:8000"

  serve8001:
    <<: *serve-template
    ports:
      - "8001:8001"

  serve8002:
    <<: *serve-template
    ports:
      - "8002:8002"

  engine:
    build:
      context: .
      dockerfile: docker/engine.Dockerfile
    depends_on:
      - redis
    command: /app/bin/engine -f /app/engine/production.yaml
    restart: always
    networks:
      - default

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    command: redis-server /dev/null --port 6379 --protected-mode no --requirepass 123456 --save ""
    networks:
      - default

  etcd:
    container_name: etcd
    image: quay.io/coreos/etcd:v3.4.15
    ports:
      - "2379:2379"
      - "2380:2380"
    restart: always
    command:
      - "/usr/local/bin/etcd"
      - "--data-dir=/etcd-data"
      - "--name=root"
      - "--initial-advertise-peer-urls=http://127.0.0.1:2380"
      - "--initial-cluster=root=http://127.0.0.1:2380"
      - "--listen-peer-urls=http://0.0.0.0:2380"
      - "--listen-client-urls=http://0.0.0.0:2379"
      - "--advertise-client-urls=http://0.0.0.0:2379"
    environment:
      ETCDCTL_API: "3"
    networks:
      - default

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - data-mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123456
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  data-mongodb:
    driver: local
