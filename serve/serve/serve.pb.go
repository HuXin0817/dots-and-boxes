// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: serve.proto

package serve

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUid    string         `protobuf:"bytes,1,opt,name=GameUid,proto3" json:"GameUid,omitempty"`
	Timestamp  string         `protobuf:"bytes,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	StepCount  int64          `protobuf:"varint,3,opt,name=StepCount,proto3" json:"StepCount,omitempty"`
	BoardSize  int64          `protobuf:"varint,4,opt,name=BoardSize,proto3" json:"BoardSize,omitempty"`
	Edges      map[int64]bool `protobuf:"bytes,5,rep,name=Edges,proto3" json:"Edges,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MoveEdge   int64          `protobuf:"varint,6,opt,name=MoveEdge,proto3" json:"MoveEdge,omitempty"`
	AI1        bool           `protobuf:"varint,7,opt,name=AI1,proto3" json:"AI1,omitempty"`
	AI2        bool           `protobuf:"varint,8,opt,name=AI2,proto3" json:"AI2,omitempty"`
	NowTurn    string         `protobuf:"bytes,9,opt,name=NowTurn,proto3" json:"NowTurn,omitempty"`
	Team1Score int64          `protobuf:"varint,10,opt,name=Team1Score,proto3" json:"Team1Score,omitempty"`
	Team2Score int64          `protobuf:"varint,11,opt,name=Team2Score,proto3" json:"Team2Score,omitempty"`
	GameOver   bool           `protobuf:"varint,12,opt,name=GameOver,proto3" json:"GameOver,omitempty"`
}

func (x *GameInformationRequest) Reset() {
	*x = GameInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serve_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInformationRequest) ProtoMessage() {}

func (x *GameInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serve_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInformationRequest.ProtoReflect.Descriptor instead.
func (*GameInformationRequest) Descriptor() ([]byte, []int) {
	return file_serve_proto_rawDescGZIP(), []int{0}
}

func (x *GameInformationRequest) GetGameUid() string {
	if x != nil {
		return x.GameUid
	}
	return ""
}

func (x *GameInformationRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GameInformationRequest) GetStepCount() int64 {
	if x != nil {
		return x.StepCount
	}
	return 0
}

func (x *GameInformationRequest) GetBoardSize() int64 {
	if x != nil {
		return x.BoardSize
	}
	return 0
}

func (x *GameInformationRequest) GetEdges() map[int64]bool {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *GameInformationRequest) GetMoveEdge() int64 {
	if x != nil {
		return x.MoveEdge
	}
	return 0
}

func (x *GameInformationRequest) GetAI1() bool {
	if x != nil {
		return x.AI1
	}
	return false
}

func (x *GameInformationRequest) GetAI2() bool {
	if x != nil {
		return x.AI2
	}
	return false
}

func (x *GameInformationRequest) GetNowTurn() string {
	if x != nil {
		return x.NowTurn
	}
	return ""
}

func (x *GameInformationRequest) GetTeam1Score() int64 {
	if x != nil {
		return x.Team1Score
	}
	return 0
}

func (x *GameInformationRequest) GetTeam2Score() int64 {
	if x != nil {
		return x.Team2Score
	}
	return 0
}

func (x *GameInformationRequest) GetGameOver() bool {
	if x != nil {
		return x.GameOver
	}
	return false
}

type GameInformationRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCalNumber int64 `protobuf:"varint,1,opt,name=TotalCalNumber,proto3" json:"TotalCalNumber,omitempty"`
}

func (x *GameInformationRequestResponse) Reset() {
	*x = GameInformationRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serve_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInformationRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInformationRequestResponse) ProtoMessage() {}

func (x *GameInformationRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_serve_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInformationRequestResponse.ProtoReflect.Descriptor instead.
func (*GameInformationRequestResponse) Descriptor() ([]byte, []int) {
	return file_serve_proto_rawDescGZIP(), []int{1}
}

func (x *GameInformationRequestResponse) GetTotalCalNumber() int64 {
	if x != nil {
		return x.TotalCalNumber
	}
	return 0
}

type InquireBestEdgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUid     string         `protobuf:"bytes,1,opt,name=GameUid,proto3" json:"GameUid,omitempty"`
	Step        int64          `protobuf:"varint,2,opt,name=Step,proto3" json:"Step,omitempty"`
	StepCount   int64          `protobuf:"varint,3,opt,name=StepCount,proto3" json:"StepCount,omitempty"`
	BoardSize   int64          `protobuf:"varint,4,opt,name=BoardSize,proto3" json:"BoardSize,omitempty"`
	Edges       map[int64]bool `protobuf:"bytes,6,rep,name=Edges,proto3" json:"Edges,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	WaitingTime int64          `protobuf:"varint,7,opt,name=WaitingTime,proto3" json:"WaitingTime,omitempty"`
}

func (x *InquireBestEdgeRequest) Reset() {
	*x = InquireBestEdgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serve_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquireBestEdgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquireBestEdgeRequest) ProtoMessage() {}

func (x *InquireBestEdgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_serve_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquireBestEdgeRequest.ProtoReflect.Descriptor instead.
func (*InquireBestEdgeRequest) Descriptor() ([]byte, []int) {
	return file_serve_proto_rawDescGZIP(), []int{2}
}

func (x *InquireBestEdgeRequest) GetGameUid() string {
	if x != nil {
		return x.GameUid
	}
	return ""
}

func (x *InquireBestEdgeRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *InquireBestEdgeRequest) GetStepCount() int64 {
	if x != nil {
		return x.StepCount
	}
	return 0
}

func (x *InquireBestEdgeRequest) GetBoardSize() int64 {
	if x != nil {
		return x.BoardSize
	}
	return 0
}

func (x *InquireBestEdgeRequest) GetEdges() map[int64]bool {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *InquireBestEdgeRequest) GetWaitingTime() int64 {
	if x != nil {
		return x.WaitingTime
	}
	return 0
}

type InquireBestEdgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CalculatedNumber int64 `protobuf:"varint,1,opt,name=CalculatedNumber,proto3" json:"CalculatedNumber,omitempty"`
	NowBestEdge      int64 `protobuf:"varint,2,opt,name=NowBestEdge,proto3" json:"NowBestEdge,omitempty"`
}

func (x *InquireBestEdgeResponse) Reset() {
	*x = InquireBestEdgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serve_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquireBestEdgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquireBestEdgeResponse) ProtoMessage() {}

func (x *InquireBestEdgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_serve_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquireBestEdgeResponse.ProtoReflect.Descriptor instead.
func (*InquireBestEdgeResponse) Descriptor() ([]byte, []int) {
	return file_serve_proto_rawDescGZIP(), []int{3}
}

func (x *InquireBestEdgeResponse) GetCalculatedNumber() int64 {
	if x != nil {
		return x.CalculatedNumber
	}
	return 0
}

func (x *InquireBestEdgeResponse) GetNowBestEdge() int64 {
	if x != nil {
		return x.NowBestEdge
	}
	return 0
}

var File_serve_proto protoreflect.FileDescriptor

var file_serve_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x22, 0xbc, 0x03, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x65, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x65, 0x70,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x45, 0x64, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x45, 0x64,
	0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x64, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x64, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x41, 0x49, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x41, 0x49,
	0x31, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x49, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x41, 0x49, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x77, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x6f, 0x77, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x65, 0x61, 0x6d, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x65, 0x61, 0x6d, 0x32, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x32, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x64, 0x67,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x1e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x9e, 0x02,
	0x0a, 0x16, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x65, 0x42, 0x65, 0x73, 0x74, 0x45, 0x64, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x65, 0x70, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x65, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x45, 0x64, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x42, 0x65, 0x73, 0x74, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x45, 0x64, 0x67,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x67,
	0x0a, 0x17, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x65, 0x42, 0x65, 0x73, 0x74, 0x45, 0x64, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x77, 0x42, 0x65, 0x73, 0x74,
	0x45, 0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4e, 0x6f, 0x77, 0x42,
	0x65, 0x73, 0x74, 0x45, 0x64, 0x67, 0x65, 0x32, 0xb6, 0x01, 0x0a, 0x05, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x5b, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0f, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x65, 0x42, 0x65, 0x73, 0x74, 0x45, 0x64, 0x67,
	0x65, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x42, 0x65, 0x73, 0x74, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x42, 0x65, 0x73, 0x74, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_serve_proto_rawDescOnce sync.Once
	file_serve_proto_rawDescData = file_serve_proto_rawDesc
)

func file_serve_proto_rawDescGZIP() []byte {
	file_serve_proto_rawDescOnce.Do(func() {
		file_serve_proto_rawDescData = protoimpl.X.CompressGZIP(file_serve_proto_rawDescData)
	})
	return file_serve_proto_rawDescData
}

var file_serve_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_serve_proto_goTypes = []interface{}{
	(*GameInformationRequest)(nil),         // 0: serve.GameInformationRequest
	(*GameInformationRequestResponse)(nil), // 1: serve.GameInformationRequestResponse
	(*InquireBestEdgeRequest)(nil),         // 2: serve.InquireBestEdgeRequest
	(*InquireBestEdgeResponse)(nil),        // 3: serve.InquireBestEdgeResponse
	nil,                                    // 4: serve.GameInformationRequest.EdgesEntry
	nil,                                    // 5: serve.InquireBestEdgeRequest.EdgesEntry
}
var file_serve_proto_depIdxs = []int32{
	4, // 0: serve.GameInformationRequest.Edges:type_name -> serve.GameInformationRequest.EdgesEntry
	5, // 1: serve.InquireBestEdgeRequest.Edges:type_name -> serve.InquireBestEdgeRequest.EdgesEntry
	0, // 2: serve.Serve.PostGameInformation:input_type -> serve.GameInformationRequest
	2, // 3: serve.Serve.InquireBestEdge:input_type -> serve.InquireBestEdgeRequest
	1, // 4: serve.Serve.PostGameInformation:output_type -> serve.GameInformationRequestResponse
	3, // 5: serve.Serve.InquireBestEdge:output_type -> serve.InquireBestEdgeResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_serve_proto_init() }
func file_serve_proto_init() {
	if File_serve_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_serve_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serve_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInformationRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serve_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquireBestEdgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serve_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquireBestEdgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_serve_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_serve_proto_goTypes,
		DependencyIndexes: file_serve_proto_depIdxs,
		MessageInfos:      file_serve_proto_msgTypes,
	}.Build()
	File_serve_proto = out.File
	file_serve_proto_rawDesc = nil
	file_serve_proto_goTypes = nil
	file_serve_proto_depIdxs = nil
}
